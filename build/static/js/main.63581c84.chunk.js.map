{"version":3,"sources":["reducers/loginReducer.js","reducers/index.js","actions/types.js","store.js","Components/HomeCard/HomeCard.js","Views/Home.js","config.js","Components/Message/Message.js","Components/Common/Error.js","Components/Cards/CardImage.js","Components/Cards/CardContent.js","Components/Cards/Card.js","Components/Sidebar/Sidebar.js","Components/Order/OrderItem.js","Components/Order/OrderContainer.js","Components/Common/Loading.js","Components/Reports/PdfInvoice.js","Views/Order/Order.js","Components/Cashier/CashierTable.js","Views/Cashier/Cashier.js","Components/Common/Regex.js","Components/Category/CategoryTable.js","Components/Category/CategoryForm.js","Views/Category/Category.js","Components/Menu/MenuForm.js","Components/Menu/MenuTable.js","Views/Menu/Menu.js","Components/Reports/PdfReportInvoices.js","Components/Common/BulmaCalendar.js","Components/Reports/ReportInvoicesForm.js","Views/Report/ReportInvoices.js","Components/StoreUser/StoreUserTable.js","Components/StoreUser/StoreUserForm.js","Views/StoreUser/StoreUser.js","Components/Table/TableTable.js","Components/Table/TableForm.js","routes/index.js","Views/Table/Table.js","actions/loginActions.js","Components/Header/Header.js","Views/Login.js","Views/ErrorPage/NotFound404.js","App.js","serviceWorker.js","index.js"],"names":["getCookie","name","parts","concat","document","cookie","split","length","parseInt","pop","shift","initialState","item","login","user_id","combineReducers","state","arguments","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","HomeCard","props","_props$route","route","url","cardColor","homeCardProperty","react_default","a","createElement","react_router_dom","className","to","connect","routes","filter","showOnHome","level","map","Components_HomeCard_HomeCard","key","endpoint","graphQLClient","GraphQLClient","headers","authorization","loginGraphQLClient","ShowMessage","mode","list","globalMessage","getElementById","globalMessageBody","globalMessageList","forEach","li","innerHTML","appendChild","classList","toggle","setTimeout","Message","id","ValidationError","_Error","_this","classCallCheck","this","_len","message","Array","_key","possibleConstructorReturn","getPrototypeOf","call","messageValue","errors","inherits","wrapNativeSuper","Error","GraphQLError","ex","JSON","parse","stringify","response","_unused","HandlerError","errorList","push","_ex$response","status","statusText","CardImage","image","src","alt","CardContent","handleAddOrder","handleSubtractOrder","harga","onClick","data-parent","value","quantity","readOnly","Card","SelectedCategoryMenu","handleChange","Cards_CardImage","Cards_CardContent","Sidebar","children","OrderItem","handleDelete","Fragment","OrderContainer","isLoading","selectedTableId","ListTable","ListCategory","OrderList","handleSubmitOrder","handleDeleteOrder","handleDeleteAllOrder","countItem","totalPrice","x","price","reduce","accumulator","currentValue","onChange","category_id","child","Order_OrderItem","numeral","format","disabled","Loading","PdfInvoice","_ref","asyncToGenerator","regenerator_default","mark","_callee","invoiceId","_ref2","_ref2$invoice","invoiceTotal","invoiceDetails","menuNameRowCount","dataInvoices","dynamicMenuRow","doc","marginTop","wrap","_context","prev","next","request","sent","invoice","total","invoice_details","menu","menuName","menuNameText","menuQuantity","menuTotal","Jspdf","setFontSize","setTextColor","setFontStyle","text","setFont","window","open","output","stop","_x","Order","activeTab","ListMenu","bind","assertThisInitialized","handleSelectTab","setState","match","params","bindMasterTable","bindMasterOrder","t0","index","findIndex","selectedItem","confirm","tablesConnection","tables","query","categories","categoriesConnection","menus","menusConnection","category","sort","y","firstCategoryId","i","indexOf","e","defineProperty","target","setOrder","userId","invoiceDetail","menu_id","discount","invoiceTable","table_id","data","createInvoice","_context4","_this2","_this$state2","Cards_Card","Common_Loading","Components_Sidebar_Sidebar","Order_OrderContainer","Component","CashierTable","pagingIndex","pagingCount","totalCount","ListInvoice","handlePaging","invoice_date","colSpan","role","aria-label","Cashier","invoicesConnection","invoices","moment","modified_date","created_date","args","_this$state3","Cashier_CashierTable","CheckNumber","RegExp","test","CheckString","CategoryTable","bindCategory","CategoryForm","categoryId","categoryName","handleSubmit","handleClear","autoComplete","htmlFor","placeholder","Category","bindMasterCategory","Regex","_context3","_this$state4","Category_CategoryForm","Category_CategoryTable","MenuForm","menuId","menuPrice","menuCategory","menuImage","MenuTable","ListMenuFiltered","bindMenu","Menu","bindMasterMenu","files","reader","FileReader","addEventListener","rd","result","readAsDataURL","preventDefault","Menu_MenuForm","Menu_MenuTable","PdfReportInvoices","totalIncome","val","menuArr","slice","join","autoTable","title","dataKey","toConsumableArray","pageContent","lastY","marginRight","marginLeft","didDrawPage","showHead","margin","top","right","bottom","left","startY","tableLineColor","tableLineWidth","styles","font","fontSize","textColor","lineColor","lineWidth","headStyles","fillColor","bodyStyles","alternateRowStyles","jspdfStyle","settings","navigator","userAgent","BulmaCalendar","bulmaCalendar","attach","displayMode","showHeader","showFooter","dateFormat","componentId","ReportInvoicesForm","monthList","selectedPeriodType","selectedMonth","selectedYear","handleGenerateReport","Common_BulmaCalendar","month","ReportInvoices","selectedDaily","dateStart","add","Reports_ReportInvoicesForm","Reports_PdfReportInvoices","StoreUserTable","ListStoreUserLevel","ListUser","bindStoreUser","username","StoreUserForm","storeUserId","storeUserName","storeUserLevel","StoreUser","bindMasterStoreUser","usersConnection","user","storeUserPassword","StoreUser_StoreUserForm","StoreUser_StoreUserTable","TableTable","bindTable","TableForm","tableId","tableName","component","Home","exact","showOnHeader","allowEmployee","Table","first","offset","table","Table_TableForm","Table_TableTable","Header","handleLogout","fetchLogout","navbarBurgers","prototype","querySelectorAll","el","dataset","$target","navbarItem","navbar","href","width","height","aria-expanded","data-target","aria-hidden","mapDispatchToProps","dispatch","Login","password","mounted","setLogin","fetchLogin","loginIsValid","Components_Message_Message","loginData","_callee2","_ref3","_ref3$signIn","token","_ref3$signIn$user","_context2","signIn","location","reload","abrupt","_x2","NotFound404","mapStateToProps","Components_Header_Header","react_router","path","Views_Login","Boolean","hostname","ReactDOM","render","es","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63581c84.chunk.js","sourcesContent":["import { LOGIN_POST, LOGOUT_POST } from '../actions/types';\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2)\n    return parseInt(\n      parts\n        .pop()\n        .split(';')\n        .shift(),\n      10\n    );\n  return -1;\n}\n\nconst initialState = {\n  item: {\n    login: getCookie('login_state'),\n    user_id: getCookie('user_id')\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_POST: {\n      return {\n        ...state,\n        item: action.payload\n      };\n    }\n\n    case LOGOUT_POST: {\n      return {\n        ...state,\n        item: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport loginReducer from './loginReducer';\n\nexport default combineReducers({\n  login: loginReducer\n});\n","// Login Types\nexport const LOGIN_POST = 'LOGIN_POST';\nexport const LOGOUT_POST = 'LOGOUT_POST';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst inititalState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  inititalState,\n  compose(\n    applyMiddleware(...middleware)\n    // This file get gitignore because of redux dev tools\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomeCard = props => {\n  const {\n    route: {\n      name,\n      url,\n      homeCardProperty: { cardColor }\n    }\n  } = props;\n\n  return (\n    <Link className={`home-card home-card-${cardColor}`} to={url}>\n      <div className=\"home-card-icon\">\n        <i className=\"fas fa-hamburger fa-4x\" />\n      </div>\n      <span className=\"home-card-name\">{name}</span>\n    </Link>\n  );\n};\n\nexport default HomeCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport routes from '../routes';\nimport '../assets/css/component-home-card.css';\nimport HomeCard from '../Components/HomeCard/HomeCard';\n\nconst Home = props => {\n  const { login } = props;\n\n  return (\n    <div className=\"grid grid-tem-col-1-1-1 grid-gap-20px\">\n      {routes\n        .filter(route => route.showOnHome && route.level >= login)\n        .map(route => (\n          <HomeCard key={route.url} route={route} />\n        ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.item.login\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import { GraphQLClient } from 'graphql-request';\n\nconst endpoint = 'http://warteg-dev.herokuapp.com/graphql';\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2)\n    return parts\n      .pop()\n      .split(';')\n      .shift();\n  return '';\n}\n\nconst graphQLClient = new GraphQLClient(endpoint, {\n  headers: {\n    authorization: `Bearer ${getCookie('jwtToken')}`\n  }\n});\nconst loginGraphQLClient = new GraphQLClient(endpoint);\n\n// const graphQLClient = new GraphQLClient(endpoint, {\n//   headers: {}\n// });\n\nexport default graphQLClient;\nexport { loginGraphQLClient };\n","import React from 'react';\nimport '../../assets/css/component-message.css';\n\nfunction ShowMessage(mode = 'is-success', list = []) {\n  const globalMessage = document.getElementById('global-message');\n  const globalMessageBody = document.getElementById('global-message-body');\n  // const globalMessageList = document.getElementById('global-message-list');\n  const globalMessageList = document.createElement('ul');\n\n  if (list.length > 0) {\n    list.forEach(item => {\n      const li = document.createElement('li');\n      li.innerHTML = item;\n      globalMessageList.appendChild(li);\n    });\n  }\n\n  globalMessageBody.innerHTML = ``;\n  globalMessageBody.appendChild(globalMessageList);\n\n  globalMessage.classList = `message ${mode}`;\n\n  globalMessage.classList.toggle('message-open');\n  setTimeout(() => {\n    globalMessage.classList.toggle('message-open');\n  }, 2000);\n}\n\nconst Message = () => (\n  <article id=\"global-message\" className=\"message is-success\">\n    <div id=\"global-message-body\" className=\"message-body\">\n      {/* <ul id=\"global-message-list\" /> */}\n    </div>\n  </article>\n);\n\nexport default Message;\nexport { ShowMessage };\n","export class ValidationError extends Error {\n  constructor(...message) {\n    super(message);\n\n    const messageValue = message[0];\n\n    this.name = 'ValidationError';\n    this.errors = messageValue;\n  }\n}\n\nexport class MessageError extends Error {\n  constructor(...message) {\n    super(message);\n    this.name = 'MessageError';\n  }\n}\n\nconst GraphQLError = ex => {\n  try {\n    const errorMessage = JSON.parse(JSON.stringify(ex, undefined));\n\n    return errorMessage.response.errors[0].message;\n  } catch {\n    return undefined;\n  }\n};\n\nexport const HandlerError = ex => {\n  let errorList = [];\n\n  if (GraphQLError(ex)) {\n    errorList.push(GraphQLError(ex));\n  } else if (ex.response) {\n    const { status, statusText } = ex.response;\n    errorList.push(`${status} ${statusText}`);\n  } else if (ex instanceof ValidationError) {\n    const { errors } = ex;\n    errorList = errors;\n  } else {\n    errorList.push(ex);\n  }\n\n  return errorList;\n};\n\n// class RequiredFieldError extends ValidationError {\n//   constructor(property) {\n//     super(property + \"harus diisi\");\n//     this.name = \"RequiredFieldError\";\n//     this.property = property;\n//   }\n// }\n","import React from 'react';\n\nconst CardImage = props => {\n  const { image } = props;\n\n  return (\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={image || 'https://bulma.io/images/placeholders/1280x960.png'}\n          alt=\"Placeholder\"\n        />\n      </figure>\n    </div>\n  );\n};\n\nexport default CardImage;\n","import React from 'react';\n\nconst CardContent = props => {\n  const { item, handleAddOrder, handleSubtractOrder } = props;\n\n  return (\n    <div className=\"component-card-content m-t-1\">\n      <div className=\"m-b-1\">\n        <p>{item.name}</p>\n        <span>{item.harga}</span>\n      </div>\n      <div className=\"flex flex-align-center m-b-1\">\n        <button\n          className=\"button is-info flex-3-col\"\n          type=\"button\"\n          onClick={() => handleAddOrder(item)}\n        >\n          <i className=\"fas fa-plus\" />\n        </button>\n        <input\n          name=\"quantity\"\n          data-parent=\"item\"\n          className=\"input has-text-centered flex-6-col flex-offset-1-col\"\n          type=\"number\"\n          value={item.quantity}\n          readOnly\n        />\n        <button\n          className=\"button is-danger flex-3-col flex-offset-1-col\"\n          type=\"button\"\n          onClick={() => handleSubtractOrder(item)}\n        >\n          <i className=\"fas fa-minus\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CardContent;\n","import React from 'react';\n\nimport CardImage from './CardImage';\nimport CardContent from './CardContent';\n\nimport '../../assets/css/component-card.css';\n\nconst Card = props => {\n  const {\n    SelectedCategoryMenu,\n    // =========================\n    handleChange,\n    handleAddOrder,\n    handleSubtractOrder\n  } = props;\n\n  return SelectedCategoryMenu.map(item => {\n    return (\n      <div className=\"component-card\" key={item.id}>\n        <CardImage\n          image={item.image || 'https://bulma.io/images/placeholders/64x64.png'}\n        />\n        <CardContent\n          item={item}\n          // =========================\n          handleChange={handleChange}\n          handleAddOrder={handleAddOrder}\n          handleSubtractOrder={handleSubtractOrder}\n        />\n      </div>\n    );\n  });\n};\n\nexport default Card;\n","import React from 'react';\n\nimport '../../assets/css/component-orderitem.css';\n\nconst Sidebar = props => {\n  const { children } = props;\n\n  return <aside className=\"menu\">{children}</aside>;\n};\n\nexport default Sidebar;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n\nconst OrderItem = props => {\n  const { item, handleDelete } = props;\n\n  return (\n    <React.Fragment>\n      <figure className=\"image is-64x64 order-item-image\">\n        <img\n          src={item.image || 'https://bulma.io/images/placeholders/64x64.png'}\n          alt=\"order-item\"\n          onClick={() => {\n            handleDelete(item);\n          }}\n        />\n      </figure>\n      <span className=\"order-item-name is-size-7\">{item.name}</span>\n      <span className=\"order-item-quantity is-size-7\">\n        Qty: {item.quantity}\n      </span>\n    </React.Fragment>\n  );\n};\n\nexport default OrderItem;\n","import React from 'react';\nimport numeral from 'numeral';\n\nimport 'bulma-extensions/bulma-divider/dist/css/bulma-divider.min.css';\n\nimport OrderItem from './OrderItem';\n\nconst OrderContainer = props => {\n  const {\n    // Base\n    isLoading,\n    // =========================\n    selectedTableId,\n    ListTable,\n    ListCategory,\n    OrderList,\n    // =========================\n    handleChange,\n    handleSubmitOrder,\n    handleDeleteOrder,\n    handleDeleteAllOrder\n  } = props;\n\n  let countItem = 0;\n  let totalPrice = 0;\n\n  if (OrderList.filter(x => x.quantity > 0).length > 0) {\n    totalPrice = OrderList.map(item => item.quantity * item.price).reduce(\n      (accumulator, currentValue) => accumulator + currentValue\n    );\n\n    countItem = OrderList.map(item => item.quantity).reduce(\n      (accumulator, currentValue) => accumulator + currentValue\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"select is-fullwidth is-small\">\n        <select\n          name=\"selectedTableId\"\n          onChange={handleChange}\n          value={selectedTableId}\n        >\n          {ListTable.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <p className=\"menu-label is-size-5\">Order List</p>\n      <div className=\"order-container\">\n        {ListCategory.length > 0 ? (\n          ListCategory.map(item => (\n            <React.Fragment key={`key-${item.id}`}>\n              {OrderList.filter(x => x.category_id === item.id).length > 0 ? (\n                <React.Fragment>\n                  <p className=\"menu-label\">{item.name}</p>\n\n                  <ul className=\"menu-list order-list\" key={`group-${item.id}`}>\n                    {OrderList.filter(x => x.category_id === item.id).map(\n                      child => (\n                        <li\n                          className=\"order-item\"\n                          key={`child-${item.id}-${child.id}`}\n                        >\n                          <OrderItem\n                            item={child}\n                            handleDelete={handleDeleteOrder}\n                          />\n                        </li>\n                      )\n                    )}\n                  </ul>\n                </React.Fragment>\n              ) : (\n                <React.Fragment />\n              )}\n            </React.Fragment>\n          ))\n        ) : (\n          <React.Fragment />\n        )}\n      </div>\n\n      {OrderList.length > 0 ? (\n        <React.Fragment>\n          <div className=\"is-divider\" />\n          <p>Items count: {countItem}</p>\n          <p>Total: {numeral(totalPrice).format('0,0')}</p>\n          <button\n            type=\"button\"\n            className={\n              isLoading\n                ? 'button is-success is-fullwidth m-t-1 is-loading'\n                : 'button is-success is-fullwidth m-t-1'\n            }\n            disabled={isLoading}\n            onClick={handleSubmitOrder}\n          >\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            className=\"button is-fullwidth m-t-1\"\n            onClick={handleDeleteAllOrder}\n          >\n            Clear\n          </button>\n        </React.Fragment>\n      ) : (\n        <React.Fragment />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default OrderContainer;\n","import React from 'react';\nimport '../../assets/css/component-loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading\">Loading</div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import numeral from 'numeral';\nimport Jspdf from 'jspdf';\nimport 'jspdf-autotable';\n\nimport '../../assets/css/component-report.css';\n\nimport graphQLClient from '../../config';\n\nconst PdfInvoice = async invoiceId => {\n  const query = `\n      query ($invoiceId: ID!) {\n        invoice(id: $invoiceId) {\n          discount,\n          total,\n          invoice_details {\n            quantity,\n            menu {\n              name,\n              price\n            }\n          }\n        }\n      }\n    `;\n\n  const {\n    invoice: { total: invoiceTotal, invoice_details: invoiceDetails }\n  } = await graphQLClient.request(query, {\n    invoiceId\n  });\n\n  let menuNameRowCount = 0;\n\n  const dataInvoices = invoiceDetails.map(item => {\n    const {\n      menu: { price },\n      quantity\n    } = item;\n\n    const {\n      menu: { name }\n    } = item;\n\n    const menuName = [];\n\n    let menuNameText = '';\n\n    name.split(' ').forEach(x => {\n      if (menuNameText.length + x.length >= 18) {\n        menuName.push(menuNameText);\n        menuNameRowCount += 15;\n        menuNameText = '';\n      }\n\n      menuNameText += `${x} `;\n    });\n\n    menuNameRowCount += 28;\n    menuName.push(menuNameText);\n\n    return {\n      menuName,\n      menuQuantity: quantity,\n      menuTotal: price * item.quantity\n    };\n  });\n\n  // Height, Width\n  // 76, 76\n  const dynamicMenuRow =\n    52 + menuNameRowCount >= 80 ? 52 + menuNameRowCount : 80;\n  const doc = new Jspdf('p', 'mm', [dynamicMenuRow, 76]);\n\n  // HEADER LOGO\n  doc.setFontSize(6);\n  doc.setTextColor('#000');\n  doc.setFontStyle('bold');\n  // doc.addImage(TransactionLogo, 'png', data.settings.margin.left, 10, 10, 10);\n  doc.text('Warteg Modern', 4, 5);\n\n  doc.setFontSize(6);\n  doc.setTextColor('#808080');\n  doc.setFontStyle('normal');\n  doc.text('Masakan Mother', 4, 9);\n  // ================================================\n\n  doc.setFontSize(6);\n  doc.setTextColor('#000');\n  doc.setFont('courier');\n\n  let marginTop = 16;\n\n  dataInvoices.forEach(item => {\n    const { menuName, menuQuantity, menuTotal } = item;\n\n    menuName.forEach(name => {\n      doc.setFontStyle('bold');\n      doc.text(`${name}`, 2, marginTop);\n      marginTop += 4;\n    });\n\n    doc.setFontStyle('normal');\n    doc.text(`${menuQuantity}x`, 2, marginTop);\n    doc.text(`Rp ${numeral(menuTotal).format('0,0')}`, 25, marginTop, 'right');\n    marginTop += 6;\n  });\n\n  doc.text(`Total`, 2, marginTop);\n  doc.text(`Rp ${numeral(invoiceTotal).format('0,0')}`, 25, marginTop, 'right');\n\n  window.open(doc.output('bloburl'), '_blank');\n};\n\nexport default PdfInvoice;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport graphQLClient from '../../config';\n\nimport { ShowMessage } from '../../Components/Message/Message';\nimport { HandlerError } from '../../Components/Common/Error';\n\nimport Card from '../../Components/Cards/Card';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport OrderContainer from '../../Components/Order/OrderContainer';\nimport Loading from '../../Components/Common/Loading';\nimport PdfInvoice from '../../Components/Reports/PdfInvoice';\n\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Base\n      isLoading: false,\n      activeTab: 0,\n      // =========================\n      selectedTableId: 0,\n      ListCategory: [],\n      ListTable: [],\n      ListMenu: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelectTab = this.handleSelectTab.bind(this);\n\n    this.handleAddOrder = this.handleAddOrder.bind(this);\n    this.handleSubtractOrder = this.handleSubtractOrder.bind(this);\n    this.handleDeleteOrder = this.handleDeleteOrder.bind(this);\n    this.handleSubmitOrder = this.handleSubmitOrder.bind(this);\n    this.handleDeleteAllOrder = this.handleDeleteAllOrder.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const {\n        match: {\n          params: { invoiceId }\n        }\n      } = this.props;\n\n      await this.bindMasterTable();\n      await this.bindMasterOrder(invoiceId);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  setOrder(action, item) {\n    const { ListMenu } = this.state;\n\n    const index = ListMenu.findIndex(({ id }) => id === item.id);\n\n    const selectedItem = ListMenu.filter(x => x.id === item.id)[0];\n\n    if (action === 'add') {\n      selectedItem.quantity += 1;\n    } else if (action === 'subtract' && selectedItem.quantity > 0) {\n      selectedItem.quantity -= 1;\n    } else if (action === 'remove') {\n      if (window.confirm(`Hapus ${item.name}?`)) selectedItem.quantity = 0;\n    }\n\n    ListMenu[index] = selectedItem;\n\n    this.setState({ ListMenu });\n  }\n\n  async bindMasterTable() {\n    const query = `\n      {\n        tablesConnection(isActive: true, sortBy: { field: \"name\", order: \"asc\" }) {\n          tables {\n            id,\n            name\n          }\n        }\n      }\n    `;\n\n    const {\n      tablesConnection: { tables: ListTable }\n    } = await graphQLClient.request(query);\n\n    this.setState({ selectedTableId: ListTable[0].id, ListTable });\n  }\n\n  async bindMasterOrder(invoiceId = null) {\n    let query = `\n      {\n        categoriesConnection(isActive: true) {\n          categories {\n            id,\n            name\n          }\n        },\n        menusConnection(isActive: true) {\n          menus {\n            id,\n            name,\n            price,\n            image,\n            category {\n              id\n            }\n          }\n        }\n      }`;\n\n    const {\n      categoriesConnection: { categories },\n      menusConnection: { menus }\n    } = await graphQLClient.request(query);\n\n    const ListMenu = menus.map(item => ({\n      id: item.id,\n      name: item.name,\n      price: item.price,\n      image: item.image,\n      quantity: 0,\n      category_id: item.category.id\n    }));\n\n    const ListCategory = categories.sort(\n      (x, y) => parseInt(x.id, 10) - parseInt(y.id, 10)\n    );\n\n    const firstCategoryId = ListCategory[0].id;\n\n    if (invoiceId) {\n      query = `\n        query ($invoiceId: ID!){\n          invoice (id: $invoiceId) {\n            invoice_details {\n              quantity,\n              menu {\n                id\n              }\n            }\n          }\n        }\n      `;\n\n      const {\n        invoice: { invoice_details: invoiceDetails }\n      } = await graphQLClient.request(query, {\n        invoiceId\n      });\n\n      invoiceDetails.forEach(item => {\n        const i = ListMenu.map(x => x.id).indexOf(item.menu.id);\n        ListMenu[i].quantity = item.quantity;\n      });\n    }\n\n    this.setState({ activeTab: firstCategoryId, ListCategory, ListMenu });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSelectTab(item) {\n    this.setState({ activeTab: item.id });\n  }\n\n  handleAddOrder(item) {\n    this.setOrder('add', item);\n  }\n\n  handleSubtractOrder(item) {\n    this.setOrder('subtract', item);\n  }\n\n  handleDeleteOrder(item) {\n    this.setOrder('remove', item);\n  }\n\n  async handleSubmitOrder() {\n    this.setState({ isLoading: true });\n    try {\n      const { selectedTableId, ListMenu } = this.state;\n\n      const {\n        match: {\n          params: { invoiceId }\n        },\n        user_id: userId\n      } = this.props;\n\n      const invoiceDetail = ListMenu.filter(x => x.quantity > 0).map(item => ({\n        menu_id: parseInt(item.id, 10),\n        quantity: parseInt(item.quantity, 10)\n      }));\n\n      const query = invoiceId\n        ? `\n        mutation UpdateInvoice($invoiceId: ID!, $discount: Int!, $userId: ID!, $invoiceDetail: [InvoiceDetailInput]!, $invoiceTable: [InvoiceTableInput]!) {\n          updateInvoice(id: $invoiceId, discount: $discount, userId: $userId, invoiceDetail: $invoiceDetail, invoiceTable: $invoiceTable) {id}\n        }\n      `\n        : `\n        mutation CreateInvoice($discount: Int!, $userId: ID!, $invoiceDetail: [InvoiceDetailInput]!, $invoiceTable: [InvoiceTableInput]!) {\n          createInvoice(discount: $discount, userId: $userId, invoiceDetail: $invoiceDetail, invoiceTable: $invoiceTable) {id}\n        }\n      `;\n\n      const data = await graphQLClient.request(query, {\n        invoiceId,\n        userId,\n        discount: 0,\n        invoiceDetail,\n        invoiceTable: [{ table_id: selectedTableId }]\n      });\n\n      if (invoiceId) {\n        PdfInvoice(invoiceId);\n      } else {\n        const {\n          createInvoice: { id }\n        } = data;\n\n        PdfInvoice(id);\n      }\n\n      await this.bindMasterOrder();\n\n      ShowMessage('is-success', [\n        invoiceId ? 'Berhasil mengupdate order' : 'Berhasil menambah order'\n      ]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  handleDeleteAllOrder() {\n    let { ListMenu } = this.state;\n\n    ListMenu = ListMenu.map(item => ({\n      category_id: item.category_id,\n      id: item.id,\n      name: item.name,\n      price: item.price,\n      quantity: 0\n    }));\n\n    this.setState({ ListMenu });\n  }\n\n  render() {\n    const {\n      // Base\n      isLoading,\n      activeTab,\n      // =========================\n      selectedTableId,\n      ListCategory,\n      ListTable,\n      ListMenu\n    } = this.state;\n\n    const OrderList = ListMenu.filter(x => x.quantity > 0);\n\n    const SelectedCategoryMenu = ListMenu.filter(\n      x => x.category_id === activeTab\n    );\n\n    return (\n      <div className=\"flex\">\n        <div className=\"flex-11-col flex-force-max\">\n          <div className=\"tabs\">\n            <ul>\n              {ListCategory.length > 0 ? (\n                ListCategory.map(item => (\n                  <li\n                    className={item.id === activeTab ? 'is-active' : ''}\n                    key={item.id}\n                    onClick={() => this.handleSelectTab(item)}\n                  >\n                    <a>{item.name}</a>\n                  </li>\n                ))\n              ) : (\n                <React.Fragment />\n              )}\n            </ul>\n          </div>\n          <section className=\"grid grid-gap-20px grid-tem-col-1-1-1 card-container\">\n            {SelectedCategoryMenu.length > 0 ? (\n              <Card\n                SelectedCategoryMenu={SelectedCategoryMenu}\n                // =========================\n                handleChange={this.handleChange}\n                handleAddOrder={this.handleAddOrder}\n                handleSubtractOrder={this.handleSubtractOrder}\n              />\n            ) : isLoading ? (\n              <Loading />\n            ) : (\n              'No Data'\n            )}\n          </section>\n        </div>\n        <div className=\"flex-5-col m-l-1\">\n          <Sidebar>\n            <OrderContainer\n              // Base\n              isLoading={isLoading}\n              // =========================\n              selectedTableId={selectedTableId}\n              ListTable={ListTable}\n              ListCategory={ListCategory}\n              OrderList={OrderList}\n              // =========================\n              handleChange={this.handleChange}\n              handleSubmitOrder={this.handleSubmitOrder}\n              handleDeleteOrder={this.handleDeleteOrder}\n              handleDeleteAllOrder={this.handleDeleteAllOrder}\n            />\n          </Sidebar>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user_id: state.login.item.user_id\n  };\n};\n\nexport default connect(mapStateToProps)(Order);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport numeral from 'numeral';\n\nimport Loading from '../Common/Loading';\nimport PdfInvoice from '../Reports/PdfInvoice';\n\nconst CashierTable = props => {\n  const {\n    // Base\n    isLoading,\n    pagingIndex,\n    pagingCount,\n    totalCount,\n    // =========================\n    ListInvoice,\n    // =========================\n    handlePaging\n  } = props;\n\n  return (\n    <table className=\"table is-fullwidth\">\n      <thead>\n        <tr>\n          <th>No Invoice</th>\n          <th>Date Time</th>\n          <th>Total</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ListInvoice.length > 0 ? (\n          ListInvoice.map(item => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.invoice_date}</td>\n              <td>\n                {numeral(item.total - item.total * item.discount).format('0,0')}\n              </td>\n              <td>\n                <Link\n                  className=\"button is-info\"\n                  to={`order/invoiceId=${item.id}`}\n                >\n                  <i className=\"fas fa-search\" />\n                </Link>\n                <button\n                  type=\"button\"\n                  className=\"button is-link m-l-1\"\n                  onClick={() => PdfInvoice(item.id)}\n                >\n                  <i className=\"fa fa-print\" />\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"4\">{isLoading ? <Loading /> : 'No data'}</td>\n          </tr>\n        )}\n      </tbody>\n      {totalCount > pagingCount ? (\n        <tfoot>\n          <tr>\n            <th colSpan=\"4\">\n              <nav\n                className=\"pagination\"\n                role=\"navigation\"\n                aria-label=\"pagination\"\n              >\n                {pagingIndex !== 0 ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-previous\"\n                    onClick={() => {\n                      handlePaging('prev');\n                    }}\n                  >\n                    Previous\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n                {(pagingIndex + 1) * pagingCount < totalCount ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-next\"\n                    onClick={() => {\n                      handlePaging('next');\n                    }}\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n              </nav>\n            </th>\n          </tr>\n        </tfoot>\n      ) : (\n        <React.Fragment />\n      )}\n    </table>\n  );\n};\n\nexport default CashierTable;\n","import React, { Component } from 'react';\n\nimport moment from 'moment';\nimport graphQLClient from '../../config';\n\nimport { ShowMessage } from '../../Components/Message/Message';\nimport { HandlerError } from '../../Components/Common/Error';\nimport CashierTable from '../../Components/Cashier/CashierTable';\n\nclass Cashier extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Base\n      isLoading: false,\n      pagingIndex: 0,\n      pagingCount: 10,\n      totalCount: 0,\n      // =========================\n      ListInvoice: []\n    };\n\n    this.handlePaging = this.handlePaging.bind(this);\n  }\n\n  async componentDidMount() {\n    const { pagingIndex, pagingCount } = this.state;\n    this.setState({ isLoading: true });\n\n    try {\n      const query = `\n        {\n          invoicesConnection(first: ${pagingCount}, offset: ${pagingIndex *\n        pagingCount}, isActive: true, sortBy: { field: \"id\", order: \"desc\" }) {\n            totalCount,\n            invoices {\n              id,\n              discount,\n              total,\n              created_date,\n              modified_date\n            }\n          }\n        }\n      `;\n\n      const {\n        invoicesConnection: { totalCount, invoices }\n      } = await graphQLClient.request(query);\n\n      const ListInvoice = invoices.map(item => ({\n        id: item.id,\n        discount: item.discount,\n        total: item.total,\n        invoice_date: moment(\n          item.modified_date || item.created_date,\n          'x'\n        ).format('DD/MM/YYYY hh:mm A')\n      }));\n\n      this.setState({ totalCount, ListInvoice });\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  handlePaging(args) {\n    const { pagingCount, totalCount } = this.state;\n    let { pagingIndex } = this.state;\n\n    if (args === 'next' && (pagingIndex + 1) * pagingCount < totalCount) {\n      pagingIndex += 1;\n    } else if (args === 'prev' && pagingIndex !== 0) {\n      pagingIndex -= 1;\n    }\n\n    this.setState({ pagingIndex });\n  }\n\n  render() {\n    const {\n      // Base\n      isLoading,\n      pagingIndex,\n      pagingCount,\n      totalCount,\n      // =========================\n      ListInvoice\n    } = this.state;\n\n    return (\n      <div>\n        <CashierTable\n          // Base\n          isLoading={isLoading}\n          pagingIndex={pagingIndex}\n          pagingCount={pagingCount}\n          totalCount={totalCount}\n          // =========================\n          ListInvoice={ListInvoice}\n          // =========================\n          handlePaging={this.handlePaging}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Cashier;\n","export const CheckNumber = value => {\n  return !RegExp('^[1-9][0-9]*[.]?[0-9]*$').test(value);\n};\n\nexport const CheckNumberAllowZero = value => {\n  return !RegExp('^[0-9]+[.]?[0-9]*$').test(value);\n};\n\nexport const CheckPhone = value => {\n  return !RegExp('^\\\\+?\\\\d+$').test(value);\n};\n\nexport const CheckString = value => {\n  return !RegExp('.+').test(value);\n};\n","import React from 'react';\nimport Loading from '../Common/Loading';\n\nconst CategoryTable = props => {\n  const {\n    // Base\n    isLoading,\n    pagingIndex,\n    pagingCount,\n    totalCount,\n    // =========================\n    ListCategory,\n    bindCategory,\n    // =========================\n    handlePaging\n  } = props;\n\n  return (\n    <table className=\"table is-fullwidth\">\n      <thead>\n        <tr>\n          <th>Category Name</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ListCategory.length > 0 ? (\n          ListCategory.map(item => (\n            <tr key={item.id}>\n              <td>{item.name}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"button is-info\"\n                  onClick={() => bindCategory(item)}\n                >\n                  <i className=\"fas fa-pencil-alt\" />\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"2\">{isLoading ? <Loading /> : 'No data'}</td>\n          </tr>\n        )}\n      </tbody>\n      {totalCount > pagingCount ? (\n        <tfoot>\n          <tr>\n            <th colSpan=\"2\">\n              <nav\n                className=\"pagination\"\n                role=\"navigation\"\n                aria-label=\"pagination\"\n              >\n                {pagingIndex !== 0 ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-previous\"\n                    onClick={() => {\n                      handlePaging('prev');\n                    }}\n                  >\n                    Previous\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n                {(pagingIndex + 1) * pagingCount < totalCount ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-next\"\n                    onClick={() => {\n                      handlePaging('next');\n                    }}\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n              </nav>\n            </th>\n          </tr>\n        </tfoot>\n      ) : (\n        <React.Fragment />\n      )}\n    </table>\n  );\n};\n\nexport default CategoryTable;\n","import React from 'react';\n\nconst CategoryForm = props => {\n  const {\n    // Base\n    isLoading,\n    // =========================\n    categoryId,\n    categoryName,\n    // =========================\n    handleChange,\n    handleSubmit,\n    handleDelete,\n    handleClear\n  } = props;\n\n  return (\n    <form autoComplete=\"off\">\n      <div className=\"field\">\n        <label htmlFor=\"categoryName\" className=\"label\">\n          Nama Kategori\n        </label>\n        <div className=\"control\">\n          <input\n            name=\"categoryName\"\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Nama Kategori\"\n            value={categoryName}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          className={\n            isLoading ? 'button is-success is-loading' : 'button is-success'\n          }\n          type=\"submit\"\n          disabled={isLoading || categoryName === ''}\n          onClick={handleSubmit}\n        >\n          {categoryId > 0 ? 'Update' : 'Submit'}\n        </button>\n        {categoryId > 0 ? (\n          <React.Fragment>\n            <button\n              className={\n                isLoading ? 'button is-danger is-loading' : 'button is-danger'\n              }\n              type=\"submit\"\n              disabled={isLoading}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n\n            <button\n              className={isLoading ? 'button is-loading' : 'button'}\n              type=\"button\"\n              onClick={handleClear}\n            >\n              Cancel\n            </button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default CategoryForm;\n","import React, { Component } from 'react';\n\nimport graphQLClient from '../../config';\nimport * as Regex from '../../Components/Common/Regex';\nimport { ValidationError, HandlerError } from '../../Components/Common/Error';\n\nimport { ShowMessage } from '../../Components/Message/Message';\nimport CategoryTable from '../../Components/Category/CategoryTable';\nimport CategoryForm from '../../Components/Category/CategoryForm';\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Base\n      isLoading: false,\n      pagingIndex: 0,\n      pagingCount: 5,\n      totalCount: 0,\n      // =========================\n      categoryId: 0,\n      categoryName: '',\n      ListCategory: []\n    };\n\n    this.bindCategory = this.bindCategory.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handlePaging = this.handlePaging.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      await this.bindMasterCategory();\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async bindMasterCategory() {\n    const { pagingIndex, pagingCount } = this.state;\n    this.setState({ ListCategory: [] });\n\n    const query = `\n    {\n      categoriesConnection(first: ${pagingCount}, offset: ${pagingIndex *\n      pagingCount}, isActive: true) {\n        totalCount,\n        ListCategory: categories{\n          id,\n          name\n        }\n      }\n    }`;\n\n    const {\n      categoriesConnection: { totalCount, ListCategory }\n    } = await graphQLClient.request(query);\n\n    this.setState({ totalCount, ListCategory });\n  }\n\n  bindCategory(category) {\n    this.setState({ categoryId: category.id, categoryName: category.name });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async handleSubmit() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { categoryId, categoryName } = this.state;\n\n      const query =\n        categoryId > 0\n          ? `\n            mutation UpdateCategory($categoryId: ID!, $categoryName: String!) {\n              updateCategory(id: $categoryId, name: $categoryName) {id}\n            }\n          `\n          : `\n            mutation CreateCategory($categoryName: String!){\n              createCategory(name: $categoryName) {id}\n            }\n          `;\n\n      const errorList = [];\n      if (Regex.CheckString(categoryName))\n        errorList.push('Nama menu tidak boleh kosong');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        categoryId: parseInt(categoryId, 10),\n        categoryName\n      });\n\n      await this.bindMasterCategory();\n\n      ShowMessage('is-success', [\n        `Kategori berhasil ${categoryId > 0 ? 'diupdate' : 'ditambah'}`\n      ]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async handleDelete() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { categoryId } = this.state;\n\n      const query = `\n        mutation DeleteCategory($categoryId: ID!) {\n          deleteCategory(id: $categoryId) {id}\n        }\n      `;\n\n      const errorList = [];\n      if (Regex.CheckNumber(categoryId)) errorList.push('Error Category Id');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        categoryId: parseInt(categoryId, 10)\n      });\n\n      await this.bindMasterCategory();\n      this.handleClear();\n\n      ShowMessage('is-warning', [`Kategori berhasil dihapus`]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  handleClear() {\n    this.setState({ categoryId: 0, categoryName: '' });\n  }\n\n  handlePaging(args) {\n    const { pagingCount, totalCount } = this.state;\n    let { pagingIndex } = this.state;\n\n    if (args === 'next' && (pagingIndex + 1) * pagingCount < totalCount) {\n      pagingIndex += 1;\n    } else if (args === 'prev' && pagingIndex !== 0) {\n      pagingIndex -= 1;\n    }\n\n    this.setState({ pagingIndex });\n  }\n\n  render() {\n    const {\n      // Base\n      isLoading,\n      pagingIndex,\n      pagingCount,\n      totalCount,\n      // =========================\n      categoryId,\n      categoryName,\n      ListCategory\n    } = this.state;\n\n    return (\n      <div className=\"columns is-mobile\">\n        <div className=\"column\">\n          <CategoryForm\n            // Base\n            isLoading={isLoading}\n            // =========================\n            categoryId={categoryId}\n            categoryName={categoryName}\n            // =========================\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n          />\n        </div>\n\n        <div className=\"column\">\n          <CategoryTable\n            // Base\n            isLoading={isLoading}\n            pagingIndex={pagingIndex}\n            pagingCount={pagingCount}\n            totalCount={totalCount}\n            // =========================\n            ListCategory={ListCategory}\n            // =========================\n            bindCategory={this.bindCategory}\n            handlePaging={this.handlePaging}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React from 'react';\n\nconst MenuForm = props => {\n  const {\n    // Base\n    isLoading,\n    // =========================\n    menuId,\n    menuName,\n    menuPrice,\n    menuCategory,\n    menuImage,\n    ListCategory,\n    // =========================\n    handleChange,\n    handleSubmit,\n    handleDelete,\n    handleClear\n  } = props;\n\n  return (\n    <form autoComplete=\"off\">\n      <div className=\"field columns is-mobile\">\n        <div className=\"column flex flex-justify-center\">\n          <figure className=\"image is-256x256\">\n            <img\n              src={\n                menuImage || 'https://bulma.io/images/placeholders/128x128.png'\n              }\n              alt=\"menuImageFile\"\n            />\n          </figure>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"file is-large is-boxed\">\n            <label htmlFor=\"menuImage\" className=\"file-label\">\n              <input\n                id=\"menuImage\"\n                name=\"menuImage\"\n                className=\"file-input\"\n                type=\"file\"\n                onChange={handleChange}\n              />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"far fa-image\" />\n                </span>\n                <span className=\"file-label\">Choose picture</span>\n              </span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"menuName\">\n          Nama Menu\n        </label>\n        <input\n          type=\"text\"\n          name=\"menuName\"\n          className={isLoading ? 'input is-loading' : 'input'}\n          value={menuName}\n          onChange={handleChange}\n          disabled={isLoading}\n        />\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"menuPrice\">\n          Harga Menu\n        </label>\n        <input\n          type=\"text\"\n          name=\"menuPrice\"\n          className=\"input\"\n          value={menuPrice}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"menuPrice\">\n          Kategori\n        </label>\n        <div\n          className={\n            isLoading ? 'select is-fullwidth is-loading' : 'select is-fullwidth'\n          }\n        >\n          <select\n            onChange={handleChange}\n            name=\"menuCategory\"\n            disabled={isLoading}\n            value={menuCategory}\n          >\n            {ListCategory.map(item => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          className={\n            isLoading ? 'button is-success is-loading' : 'button is-success'\n          }\n          type=\"submit\"\n          disabled={isLoading || menuName === ''}\n          onClick={handleSubmit}\n        >\n          {menuId > 0 ? 'Update' : 'Submit'}\n        </button>\n        {menuId > 0 ? (\n          <React.Fragment>\n            <button\n              type=\"button\"\n              className={\n                isLoading ? 'button is-danger is-loading' : 'button is-danger'\n              }\n              disabled={isLoading}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n            <button\n              className={isLoading ? 'button is-loading' : 'button'}\n              type=\"button\"\n              disabled={isLoading}\n              onClick={handleClear}\n            >\n              Cancel\n            </button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default MenuForm;\n","import React from 'react';\nimport Loading from '../Common/Loading';\n\nconst MenuTable = props => {\n  const {\n    // Base\n    isLoading,\n    pagingIndex,\n    pagingCount,\n    totalCount,\n    // =========================\n    ListMenuFiltered,\n    bindMenu,\n    // =========================\n    handlePaging\n  } = props;\n\n  return (\n    <table className=\"table is-fullwidth\">\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Nama Menu</th>\n          <th>Kategori</th>\n          <th>Harga</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ListMenuFiltered.length > 0 ? (\n          ListMenuFiltered.map(item => (\n            <tr key={item.id}>\n              <td>\n                <figure className=\"image is-64x64\">\n                  <img\n                    src={\n                      item.image ||\n                      'https://bulma.io/images/placeholders/64x64.png'\n                    }\n                    alt={item.menu}\n                  />\n                </figure>\n              </td>\n              <td className=\"v-align-center\">{item.name}</td>\n              <td className=\"v-align-center\">{item.category.name}</td>\n              <td className=\"v-align-center\">{item.price}</td>\n              <td className=\"v-align-center\">\n                <button\n                  type=\"button\"\n                  className=\"button is-info\"\n                  onClick={() => bindMenu(item)}\n                >\n                  <i className=\"fas fa-pencil-alt\" />\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"5\">{isLoading ? <Loading /> : 'No Data'}</td>\n          </tr>\n        )}\n      </tbody>\n      {totalCount > pagingCount ? (\n        <tfoot>\n          <tr>\n            <th colSpan=\"5\">\n              <nav\n                className=\"pagination\"\n                role=\"navigation\"\n                aria-label=\"pagination\"\n              >\n                {pagingIndex !== 0 ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-previous\"\n                    onClick={() => {\n                      handlePaging('prev');\n                    }}\n                  >\n                    Previous\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n                {(pagingIndex + 1) * pagingCount < totalCount ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-next\"\n                    onClick={() => {\n                      handlePaging('next');\n                    }}\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n              </nav>\n            </th>\n          </tr>\n        </tfoot>\n      ) : (\n        <React.Fragment />\n      )}\n    </table>\n  );\n};\n\nexport default MenuTable;\n","import React, { Component } from 'react';\n\nimport graphQLClient from '../../config';\nimport * as Regex from '../../Components/Common/Regex';\nimport { ValidationError, HandlerError } from '../../Components/Common/Error';\n\nimport { ShowMessage } from '../../Components/Message/Message';\nimport MenuForm from '../../Components/Menu/MenuForm';\nimport MenuTable from '../../Components/Menu/MenuTable';\n\nclass Menu extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      // Base\n      isLoading: false,\n      pagingIndex: 0,\n      pagingCount: 10,\n      totalCount: 0,\n      // =========================\n      menuId: 0,\n      menuName: '',\n      menuPrice: '',\n      menuCategory: 0,\n      menuImage: '',\n      ListMenu: [],\n      ListCategory: []\n    };\n\n    this.bindMenu = this.bindMenu.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n\n    this.handlePaging = this.handlePaging.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    try {\n      await this.bindMasterMenu();\n    } catch (ex) {\n      ShowMessage('is-danger', [HandlerError(ex)]);\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async bindMasterMenu() {\n    const { pagingIndex, pagingCount, menuCategory } = this.state;\n    this.setState({ ListMenu: [], ListCategory: [] });\n\n    const query = `\n      {\n        menusConnection (first: ${pagingCount}, offset: ${pagingIndex *\n      pagingCount}, isActive: true) {\n          totalCount,\n          ListMenu: menus {\n            id,\n            name,\n            price,\n            image,\n            category {\n              id\n            }\n          }\n        }\n\n        categoriesConnection (first: 10, isActive: true) {\n          totalCount,\n          categories {\n            id,\n            name\n          }\n        }\n      }\n    `;\n\n    const {\n      menusConnection: { totalCount, ListMenu },\n      categoriesConnection: { categories }\n    } = await graphQLClient.request(query);\n\n    const ListCategory = categories.sort(\n      (x, y) => parseInt(x.id, 10) - parseInt(y.id, 10)\n    );\n\n    this.setState({\n      totalCount,\n      menuCategory: menuCategory || ListCategory[0].id,\n      ListMenu,\n      ListCategory\n    });\n  }\n\n  bindMenu(menu) {\n    this.setState({\n      menuId: menu.id,\n      menuName: menu.name,\n      menuCategory: menu.category.id,\n      menuImage: menu.image,\n      menuPrice: menu.price\n    });\n  }\n\n  handleChange(e) {\n    if (e.target.type === 'file' && e.target.files.length > 0) {\n      const { name } = e.target;\n      // const { name: fileName } = e.target.files[0];\n      const reader = new FileReader();\n      reader.addEventListener('load', rd => {\n        if (rd.target.result.split(',')[1].length <= 150000) {\n          this.setState({ [name]: rd.target.result });\n        } else {\n          ShowMessage('is-danger', ['File size must be below 500KB']);\n        }\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  }\n\n  // TODO: remove preventDefault()\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n    try {\n      const {\n        menuId,\n        menuName,\n        menuCategory,\n        menuImage,\n        menuPrice\n      } = this.state;\n\n      const query =\n        menuId > 0\n          ? `\n            mutation UpdateMenu($menuId: ID!, $menuName: String!, $menuPrice: Int!, $menuCategory: ID!, $menuImage: String!){\n              updateMenu(id: $menuId, name: $menuName, price: $menuPrice, categoryId: $menuCategory, image: $menuImage) {id}\n            }\n          `\n          : `\n            mutation CreateMenu($menuName: String!, $menuPrice: Int!, $menuCategory: ID!, $menuImage: String!){\n              createMenu(name: $menuName, price: $menuPrice, categoryId: $menuCategory, image: $menuImage) {id}\n            }\n          `;\n\n      const errorList = [];\n      if (Regex.CheckString(menuName))\n        errorList.push('Nama menu tidak boleh kosong');\n\n      if (Regex.CheckNumber(menuCategory))\n        errorList.push('Category menu tidak boleh kosong');\n\n      if (Regex.CheckNumber(menuPrice))\n        errorList.push('Harga tidak boleh kosong');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        menuId,\n        menuName,\n        menuPrice: parseInt(menuPrice, 10),\n        menuCategory,\n        menuImage\n      });\n\n      await this.bindMasterMenu();\n\n      ShowMessage('is-success', [\n        `Menu berhasil ${menuId > 0 ? 'diupdate' : 'ditambah'}`\n      ]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async handleDelete() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { menuId } = this.state;\n\n      const query = `\n        mutation DeleteMenu($menuId: ID!) {\n          deleteMenu(id: $menuId) {id}\n        }\n      `;\n\n      const errorList = [];\n      if (Regex.CheckNumber(menuId)) errorList.push('Error Menu Id');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        menuId\n      });\n\n      await this.bindMasterMenu();\n      this.handleClear();\n\n      ShowMessage('is-success', [`Menu berhasil dihapus`]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  handleClear() {\n    this.setState({ menuId: 0, menuName: '', menuPrice: '', menuImage: '' });\n  }\n\n  handlePaging(args) {\n    const { pagingCount, totalCount } = this.state;\n    let { pagingIndex } = this.state;\n\n    if (args === 'next' && (pagingIndex + 1) * pagingCount < totalCount) {\n      pagingIndex += 1;\n    } else if (args === 'prev' && pagingIndex !== 0) {\n      pagingIndex -= 1;\n    }\n\n    this.setState({ pagingIndex });\n  }\n\n  render() {\n    const {\n      // Base\n      isLoading,\n      pagingIndex,\n      pagingCount,\n      totalCount,\n      // =========================\n      menuId,\n      menuName,\n      menuPrice,\n      menuCategory,\n      menuImage,\n      ListMenu,\n      ListCategory\n    } = this.state;\n\n    const ListMenuFiltered = ListMenu.filter(\n      x => x.category.id === menuCategory\n    );\n\n    return (\n      <div className=\"columns\">\n        <div className=\"column\">\n          <MenuForm\n            // Base\n            isLoading={isLoading}\n            // =========================\n            menuId={menuId}\n            menuName={menuName}\n            menuCategory={menuCategory}\n            menuPrice={menuPrice}\n            menuImage={menuImage}\n            ListCategory={ListCategory}\n            // =========================\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n          />\n        </div>\n        <div className=\"column\">\n          <MenuTable\n            // Base\n            isLoading={isLoading}\n            pagingIndex={pagingIndex}\n            pagingCount={pagingCount}\n            totalCount={totalCount}\n            // =========================\n            ListMenuFiltered={ListMenuFiltered}\n            // =========================\n            bindMenu={this.bindMenu}\n            handlePaging={this.handlePaging}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from 'react';\nimport numeral from 'numeral';\nimport Jspdf from 'jspdf';\nimport 'jspdf-autotable';\n\nimport '../../assets/css/component-report.css';\n\nconst PdfReportInvoices = props => {\n  const columnInvoices = [\n    { title: 'Date', dataKey: 'invoice_date' },\n    { title: 'Invoice', dataKey: 'id' },\n    { title: 'Menu', dataKey: 'invoice_details' },\n    { title: 'Total', dataKey: 'total' }\n  ];\n\n  let { ListInvoice: dataInvoices } = props;\n\n  const totalIncome = dataInvoices\n    .map(item => item.total)\n    .reduce((val, next) => val + next);\n\n  dataInvoices = dataInvoices.map(item => {\n    const menuArr = [];\n\n    item.invoice_details.forEach(menu => {\n      let menuName = `* ${menu}`;\n\n      while (menuName.length > 50) {\n        menuArr.push(menuName.slice(0, 50));\n        menuName = `  ${menuName.slice(50)}`;\n      }\n\n      menuArr.push(menuName);\n    });\n\n    return {\n      invoice_date: item.invoice_date,\n      id: item.id,\n      total: numeral(item.total).format('0,0'),\n      invoice_details: menuArr.join('\\n')\n    };\n  });\n\n  const jspdfStyle = (\n    pageContent = null,\n    lastY = null,\n    marginRight = null,\n    marginLeft = null,\n    useHeader = null\n  ) => ({\n    didDrawPage: pageContent || '',\n    showHead: useHeader === null,\n    margin: {\n      top: 30,\n      right: marginRight || 15,\n      bottom: 44,\n      left: marginLeft || 15\n    },\n    startY: lastY === null ? 35 : lastY + 5,\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.1,\n    styles: {\n      font: 'courier',\n      fontSize: 8,\n      textColor: [0, 0, 0],\n      lineColor: [44, 62, 80],\n      lineWidth: 0.25\n    },\n    headStyles: {\n      fillColor: [255, 255, 255],\n      lineWidth: 0\n    },\n    bodyStyles: {\n      fillColor: [255, 255, 255],\n      lineWidth: 0\n    },\n    alternateRowStyles: {\n      fillColor: [240, 240, 240]\n    }\n  });\n\n  const doc = new Jspdf('potrait', 'mm', 'a4');\n\n  const pageContent = data => {\n    // HEADER\n\n    // HEADER LOGO\n    doc.setFontSize(14);\n    doc.setTextColor('#000');\n    doc.setFontStyle('bold');\n    // doc.addImage(TransactionLogo, 'png', data.settings.margin.left, 10, 10, 10);\n    doc.text('Warteg Modern', data.settings.margin.left + 15, 15);\n\n    doc.setFontSize(12);\n    doc.setTextColor('#808080');\n    doc.setFontStyle('normal');\n    doc.text('Masakan Mother', data.settings.margin.left + 15, 21);\n    // ================================================\n  };\n\n  doc.setFontSize(12);\n  doc.setTextColor('#000');\n  doc.setFont('courier');\n\n  doc.text(`Total Income: Rp ${numeral(totalIncome).format('0,0')}`, 16, 30);\n\n  doc.autoTable(columnInvoices, [...dataInvoices], jspdfStyle(pageContent));\n  // doc.autoTable(\n  // columnInvoices,\n  // [...dataInvoices],\n  // jspdfStyle(pageContent, doc.autoTable.previous.finalY)\n  // );\n\n  if (\n    RegExp(\n      'Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini'\n    ).test(navigator.userAgent)\n  ) {\n    window.open(doc.output('bloburl'), '_blank');\n    return <React.Fragment />;\n  }\n\n  return (\n    <embed\n      id=\"output\"\n      type=\"application/pdf\"\n      src={doc.output('datauristring')}\n    />\n  );\n};\n\nexport default PdfReportInvoices;\n","import React, { Component } from 'react';\nimport bulmaCalendar from 'bulma-extensions/bulma-calendar/dist/js/bulma-calendar';\n\nimport 'bulma-extensions/bulma-calendar/dist/css/bulma-calendar.min.css';\n// import bulmaCalendar from 'bulma-calendar/dist/js/bulma-calendar.min.js';\n\nclass BulmaCalendar extends Component {\n  componentDidMount() {\n    // Bulma Calendar options\n    const options = {\n      displayMode: 'dialog',\n      showHeader: false,\n      showFooter: false,\n      dateFormat: 'DD MMM YYYY'\n    };\n\n    // init Bulma Calendar\n    bulmaCalendar.attach('[type=\"date\"]', options);\n  }\n\n  render() {\n    const { componentId } = this.props;\n\n    return (\n      <input\n        id={componentId}\n        name={componentId}\n        type=\"date\"\n        className=\"input is-fullwidth\"\n      />\n    );\n  }\n}\n\nexport default BulmaCalendar;\n","import React from 'react';\nimport BulmaCalendar from '../Common/BulmaCalendar';\n\nconst ReportInvoicesForm = props => {\n  const {\n    monthList,\n    selectedPeriodType,\n    selectedMonth,\n    selectedYear,\n    ListCategory,\n    // =========================\n    handleChange,\n    handleGenerateReport\n  } = props;\n\n  return (\n    <form>\n      <div className=\"flex flex-gap-hor-1rem\">\n        <div className=\"flex-1 field\">\n          <label htmlFor=\"selectedPeriodType\" className=\"field-label is-normal\">\n            Period Type:\n          </label>\n          <div className=\"field-body\">\n            <span className=\"select is-fullwidth\">\n              <select\n                name=\"selectedPeriodType\"\n                value={selectedPeriodType}\n                onChange={handleChange}\n              >\n                <option value=\"daily\">Daily</option>\n                <option value=\"monthly\">Monthly</option>\n                <option value=\"yearly\">Yearly</option>\n              </select>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"flex-1 field flex flex-gap-hor-1rem\">\n          <div className={selectedPeriodType === 'daily' ? 'flex-1' : 'none'}>\n            <label htmlFor=\"selectedDaily\">Selected Daily</label>\n            <div className=\"field-body bulma-calendar-fullwidth\">\n              <BulmaCalendar componentId=\"selectedDaily\" />\n            </div>\n          </div>\n\n          <div className={selectedPeriodType === 'monthly' ? 'flex-1' : 'none'}>\n            <label htmlFor=\"selectedMonth\">Selected Month</label>\n            <div className=\"field-body\">\n              <span className=\"select is-fullwidth\">\n                <select\n                  name=\"selectedMonth\"\n                  value={selectedMonth}\n                  onChange={handleChange}\n                >\n                  {monthList.map(month => (\n                    <option key={month}>{month}</option>\n                  ))}\n                </select>\n              </span>\n            </div>\n          </div>\n\n          <div\n            className={\n              selectedPeriodType === 'monthly' ||\n              selectedPeriodType === 'yearly'\n                ? 'flex-1'\n                : 'none'\n            }\n          >\n            <label htmlFor=\"selectedMonth\">Selected Year</label>\n            <div className=\"field-body\">\n              <span className=\"select is-fullwidth\">\n                <select\n                  name=\"selectedYear\"\n                  value={selectedYear}\n                  onChange={handleChange}\n                >\n                  {['2019'].map(item => (\n                    <option key={item}>{item}</option>\n                  ))}\n                </select>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"selectedMonth\">Selected Category</label>\n        <div className=\"field-body\">\n          <span className=\"select\">\n            <select\n              name=\"selectedMonth\"\n              value={selectedMonth}\n              onChange={handleChange}\n            >\n              <option key=\"0\">All</option>\n              {ListCategory.map(item => (\n                <option key={item.id}>{item.name}</option>\n              ))}\n            </select>\n          </span>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={handleGenerateReport}\n          >\n            Generate Report\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ReportInvoicesForm;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport graphQLClient from '../../config';\nimport PdfReportInvoices from '../../Components/Reports/PdfReportInvoices';\nimport ReportInvoicesForm from '../../Components/Reports/ReportInvoicesForm';\n\nclass ReportInvoices extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monthList: [],\n      selectedPeriodType: 'yearly',\n      selectedMonth: moment().format('MMMM'),\n      selectedYear: moment().format('YYYY'),\n      ListCategory: [],\n      ListInvoice: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleGenerateReport = this.handleGenerateReport.bind(this);\n  }\n\n  async componentDidMount() {\n    const query = `\n      {\n        categoriesConnection(isActive: true) {\n          categories {\n            id,\n            name\n          }\n        }\n      }\n    `;\n\n    const {\n      categoriesConnection: { categories }\n    } = await graphQLClient.request(query);\n\n    const ListCategory = categories.sort(\n      (x, y) => parseInt(x.id, 10) - parseInt(y.id, 10)\n    );\n\n    const monthList = [];\n\n    for (let i = 1; i <= 12; i += 1) {\n      monthList.push(moment(i, 'M').format('MMMM'));\n    }\n\n    this.setState({ ListCategory, monthList });\n  }\n\n  handleChange(e) {\n    if (\n      e.target.name === 'selectedMonth' ||\n      e.target.name === 'selectedPeriodType'\n    )\n      this.setState({ ListInvoice: [] });\n\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async handleGenerateReport() {\n    const { selectedPeriodType, selectedMonth, selectedYear } = this.state;\n\n    const selectedDaily = document.getElementById('selectedDaily').value;\n\n    let dateStart = '';\n    let dateEnd = '';\n\n    if (selectedPeriodType === 'daily') {\n      dateStart = moment(selectedDaily, 'DD MMM YYYY').format('x');\n      dateEnd = dateStart;\n    } else if (selectedPeriodType === 'monthly') {\n      dateStart = moment(\n        `01 ${selectedMonth}} ${selectedYear}`,\n        'DD MMMM YYYY'\n      ).format('x');\n      dateEnd = moment(dateStart, 'x')\n        .add('1', 'month')\n        .add('-1', 'day')\n        .format('x');\n    } else if (selectedYear === 'yearly') {\n      dateStart = moment(`01 Jan ${selectedYear}`, 'DD MMM YYYY').format('x');\n      dateEnd = moment(`31 Dec ${selectedYear}`, 'DD MMM YYYY').format('x');\n    }\n\n    const query = `\n      {\n        invoicesConnection(isActive: true, sortBy: { field: \"id\", order: \"desc\" }) {\n          invoices {\n            id,\n            discount,\n            total,\n            created_date,\n            modified_date,\n            invoice_details {\n              menu {\n                name\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    const {\n      invoicesConnection: { invoices }\n    } = await graphQLClient.request(query);\n\n    const ListInvoice = invoices.map(item => ({\n      id: item.id,\n      discount: item.discount,\n      total: item.total,\n      invoice_date: moment(item.modified_date || item.created_date, 'x').format(\n        'DD/MM/YYYY hh:mm A'\n      ),\n      invoice_details: item.invoice_details.map(child => child.menu.name)\n    }));\n    // .filter(\n    //   item =>\n    //     moment(item.invoice_date, 'DD/MM/YYYY hh:mm A').format('MMMM') ===\n    //     selectedMonth\n    // );\n\n    this.setState({ ListInvoice });\n  }\n\n  render() {\n    const {\n      monthList,\n      selectedPeriodType,\n      selectedMonth,\n      selectedYear,\n      ListCategory,\n      ListInvoice\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <ReportInvoicesForm\n          monthList={monthList}\n          selectedPeriodType={selectedPeriodType}\n          selectedMonth={selectedMonth}\n          selectedYear={selectedYear}\n          ListCategory={ListCategory}\n          // =========================\n          handleChange={this.handleChange}\n          handleGenerateReport={this.handleGenerateReport}\n        />\n\n        <div className=\"m-t-1\" />\n\n        {ListInvoice.length > 0 ? (\n          <PdfReportInvoices ListInvoice={ListInvoice} />\n        ) : (\n          <React.Fragment />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReportInvoices;\n","import React from 'react';\nimport Loading from '../Common/Loading';\n\nconst StoreUserTable = props => {\n  const {\n    // Base\n    isLoading,\n    pagingIndex,\n    pagingCount,\n    totalCount,\n    ListStoreUserLevel,\n    // =========================\n    ListUser,\n    bindStoreUser,\n    // =========================\n    handlePaging\n  } = props;\n\n  return (\n    <table className=\"table is-fullwidth\">\n      <thead>\n        <tr>\n          <th>Username</th>\n          <th>Level</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ListUser.length > 0 ? (\n          ListUser.map(item => (\n            <tr key={item.id}>\n              <td>{item.username}</td>\n              <td>\n                {ListStoreUserLevel.filter(x => x.level === item.level)[0].name}\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"button is-info\"\n                  onClick={() => bindStoreUser(item)}\n                >\n                  <i className=\"fas fa-pencil-alt\" />\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"2\">{isLoading ? <Loading /> : 'No data'}</td>\n          </tr>\n        )}\n      </tbody>\n      {totalCount > pagingCount ? (\n        <tfoot>\n          <tr>\n            <th colSpan=\"2\">\n              <nav\n                className=\"pagination\"\n                role=\"navigation\"\n                aria-label=\"pagination\"\n              >\n                {pagingIndex !== 0 ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-previous\"\n                    onClick={() => {\n                      handlePaging('prev');\n                    }}\n                  >\n                    Previous\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n                {(pagingIndex + 1) * pagingCount < totalCount ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-next\"\n                    onClick={() => {\n                      handlePaging('next');\n                    }}\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n              </nav>\n            </th>\n          </tr>\n        </tfoot>\n      ) : (\n        <React.Fragment />\n      )}\n    </table>\n  );\n};\n\nexport default StoreUserTable;\n","import React from 'react';\n\nconst StoreUserForm = props => {\n  const {\n    // Base\n    isLoading,\n    ListStoreUserLevel,\n    // =========================\n    storeUserId,\n    storeUserName,\n    storeUserLevel,\n    // =========================\n    handleChange,\n    handleSubmit,\n    handleDelete,\n    handleClear\n  } = props;\n\n  return (\n    <form autoComplete=\"off\">\n      <div className=\"field\">\n        <label htmlFor=\"storeUserName\" className=\"label\">\n          Login Username\n        </label>\n        <div className=\"control\">\n          <input\n            name=\"storeUserName\"\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Username\"\n            value={storeUserName}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"storeUserLevel\" className=\"label\">\n          User Level\n        </label>\n        <div className=\"control\">\n          <div className=\"select is-fullwidth\">\n            <select\n              onChange={handleChange}\n              name=\"storeUserLevel\"\n              disabled={isLoading}\n              value={storeUserLevel}\n            >\n              {ListStoreUserLevel.map(item => (\n                <option key={item.level} value={item.level}>\n                  {item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"storeUserPassword\" className=\"label\">\n          Login Password\n        </label>\n        <div className=\"control\">\n          <input\n            name=\"storeUserPassword\"\n            id=\"storeUserPassword\"\n            className=\"input\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          className={\n            isLoading ? 'button is-success is-loading' : 'button is-success'\n          }\n          type=\"submit\"\n          disabled={isLoading || storeUserName === ''}\n          onClick={handleSubmit}\n        >\n          {storeUserId > 0 ? 'Update' : 'Submit'}\n        </button>\n        {storeUserId > 0 ? (\n          <React.Fragment>\n            <button\n              className={\n                isLoading ? 'button is-danger is-loading' : 'button is-danger'\n              }\n              type=\"submit\"\n              disabled={isLoading}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n\n            <button\n              className={isLoading ? 'button is-loading' : 'button'}\n              type=\"button\"\n              onClick={handleClear}\n            >\n              Cancel\n            </button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default StoreUserForm;\n","import React, { Component } from 'react';\n\nimport graphQLClient from '../../config';\nimport * as Regex from '../../Components/Common/Regex';\nimport { ValidationError, HandlerError } from '../../Components/Common/Error';\n\nimport { ShowMessage } from '../../Components/Message/Message';\nimport StoreUserTable from '../../Components/StoreUser/StoreUserTable';\nimport StoreUserForm from '../../Components/StoreUser/StoreUserForm';\n\nclass StoreUser extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Base\n      isLoading: false,\n      pagingIndex: 0,\n      pagingCount: 5,\n      totalCount: 0,\n      ListStoreUserLevel: [\n        {\n          level: 0,\n          name: 'Admin'\n        },\n        {\n          level: 1,\n          name: 'Cashier'\n        },\n        {\n          level: 2,\n          name: 'Staff'\n        }\n      ],\n      // =========================\n      storeUserId: 0,\n      storeUserName: '',\n      storeUserLevel: 0,\n      ListUser: []\n    };\n\n    this.bindStoreUser = this.bindStoreUser.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handlePaging = this.handlePaging.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      await this.bindMasterStoreUser();\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async bindMasterStoreUser() {\n    this.setState({ ListUser: [] });\n\n    const query = `\n    {\n      usersConnection(isActive: true) {\n        totalCount,\n        ListUser: users{\n          id,\n          username,\n          level\n        }\n      }\n    }`;\n\n    const {\n      usersConnection: { ListUser }\n    } = await graphQLClient.request(query);\n\n    this.setState({ ListUser });\n  }\n\n  bindStoreUser(user) {\n    this.setState({\n      storeUserId: user.id,\n      storeUserLevel: user.level,\n      storeUserName: user.username\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async handleSubmit() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { storeUserId, storeUserName, storeUserLevel } = this.state;\n\n      const storeUserPassword = document.getElementById('storeUserPassword')\n        .value;\n\n      const query =\n        storeUserId > 0\n          ? `\n            mutation UpdateUser($storeUserId: ID!, $storeUserName: String!, $storeUserLevel: Int!, $storeUserPassword: String!) {\n              updateUser(id: $storeUserId, username: $storeUserName, level: $storeUserLevel, password: $storeUserPassword) {id}\n            }\n          `\n          : `\n            mutation CreateUser($storeUserName: String!, $storeUserLevel: Int!, $storeUserPassword: String!) {\n              createUser(username: $storeUserName, level: $storeUserLevel, password: $storeUserPassword) {id}\n            }\n          `;\n\n      const errorList = [];\n      if (Regex.CheckString(storeUserName))\n        errorList.push('Username tidak boleh kosong');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        storeUserId: parseInt(storeUserId, 10),\n        storeUserName,\n        storeUserLevel: parseInt(storeUserLevel, 10),\n        storeUserPassword\n      });\n\n      await this.bindMasterStoreUser();\n      this.handleClear();\n\n      ShowMessage('is-success', [\n        `User berhasil ${storeUserId > 0 ? 'diupdate' : 'ditambah'}`\n      ]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async handleDelete() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { storeUserId } = this.state;\n\n      const query = `\n        mutation DeleteUser($storeUserId: ID!) {\n          deleteUser(id: $storeUserId) {id}\n        }\n      `;\n\n      const errorList = [];\n      if (Regex.CheckNumber(storeUserId)) errorList.push('Error Category Id');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        storeUserId: parseInt(storeUserId, 10)\n      });\n\n      await this.bindMasterStoreUser();\n      this.handleClear();\n\n      ShowMessage('is-warning', [`User berhasil dihapus`]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  handleClear() {\n    document.getElementById('storeUserPassword').value = '';\n    this.setState({ storeUserId: 0, storeUserName: '' });\n  }\n\n  handlePaging(args) {\n    const { pagingCount, totalCount } = this.state;\n    let { pagingIndex } = this.state;\n\n    if (args === 'next' && (pagingIndex + 1) * pagingCount < totalCount) {\n      pagingIndex += 1;\n    } else if (args === 'prev' && pagingIndex !== 0) {\n      pagingIndex -= 1;\n    }\n\n    this.setState({ pagingIndex });\n  }\n\n  render() {\n    const {\n      // Base\n      isLoading,\n      pagingIndex,\n      pagingCount,\n      totalCount,\n      ListStoreUserLevel,\n      // =========================\n      storeUserId,\n      storeUserName,\n      storeUserLevel,\n      ListUser\n    } = this.state;\n\n    return (\n      <div className=\"columns is-mobile\">\n        <div className=\"column\">\n          <StoreUserForm\n            // Base\n            isLoading={isLoading}\n            ListStoreUserLevel={ListStoreUserLevel}\n            // =========================\n            storeUserId={storeUserId}\n            storeUserName={storeUserName}\n            storeUserLevel={storeUserLevel}\n            // =========================\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n          />\n        </div>\n\n        <div className=\"column\">\n          <StoreUserTable\n            // Base\n            isLoading={isLoading}\n            pagingIndex={pagingIndex}\n            pagingCount={pagingCount}\n            totalCount={totalCount}\n            ListStoreUserLevel={ListStoreUserLevel}\n            // =========================\n            ListUser={ListUser}\n            // =========================\n            bindStoreUser={this.bindStoreUser}\n            handlePaging={this.handlePaging}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StoreUser;\n","import React from 'react';\nimport Loading from '../Common/Loading';\n\nconst TableTable = props => {\n  const {\n    // Base\n    isLoading,\n    pagingIndex,\n    pagingCount,\n    totalCount,\n    // =========================\n    ListTable,\n    bindTable,\n    // =========================\n    handlePaging\n  } = props;\n\n  return (\n    <table className=\"table is-fullwidth\">\n      <thead>\n        <tr>\n          <th>Table Name</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {ListTable.length > 0 ? (\n          ListTable.map(item => (\n            <tr key={item.id}>\n              <td>{item.name}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"button is-info\"\n                  onClick={() => bindTable(item)}\n                >\n                  <i className=\"fas fa-pencil-alt\" />\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"2\">{isLoading ? <Loading /> : 'No data'}</td>\n          </tr>\n        )}\n      </tbody>\n      {totalCount > pagingCount ? (\n        <tfoot>\n          <tr>\n            <th colSpan=\"2\">\n              <nav\n                className=\"pagination\"\n                role=\"navigation\"\n                aria-label=\"pagination\"\n              >\n                {pagingIndex !== 0 ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-previous\"\n                    onClick={() => {\n                      handlePaging('prev');\n                    }}\n                  >\n                    Previous\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n                {(pagingIndex + 1) * pagingCount < totalCount ? (\n                  <button\n                    type=\"button\"\n                    className=\"pagination-next\"\n                    onClick={() => {\n                      handlePaging('next');\n                    }}\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <React.Fragment />\n                )}\n              </nav>\n            </th>\n          </tr>\n        </tfoot>\n      ) : (\n        <React.Fragment />\n      )}\n    </table>\n  );\n};\n\nexport default TableTable;\n","import React from 'react';\n\nconst TableForm = props => {\n  const {\n    // Base\n    isLoading,\n    // =========================\n    tableId,\n    tableName,\n    // =========================\n    handleChange,\n    handleSubmit,\n    handleDelete,\n    handleClear\n  } = props;\n\n  return (\n    <form autoComplete=\"off\">\n      <div className=\"field\">\n        <label htmlFor=\"tableName\" className=\"label\">\n          Nama Table\n        </label>\n        <div className=\"control\">\n          <input\n            name=\"tableName\"\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Nama Table\"\n            value={tableName}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          className={\n            isLoading ? 'button is-success is-loading' : 'button is-success'\n          }\n          type=\"submit\"\n          disabled={isLoading || tableName === ''}\n          onClick={handleSubmit}\n        >\n          {tableId > 0 ? 'Update' : 'Submit'}\n        </button>\n        {tableId > 0 ? (\n          <React.Fragment>\n            <button\n              className={\n                isLoading ? 'button is-danger is-loading' : 'button is-danger'\n              }\n              type=\"submit\"\n              disabled={isLoading}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n\n            <button\n              className={isLoading ? 'button is-loading' : 'button'}\n              type=\"button\"\n              onClick={handleClear}\n            >\n              Cancel\n            </button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default TableForm;\n","import Home from '../Views/Home';\nimport Order from '../Views/Order/Order';\nimport Cashier from '../Views/Cashier/Cashier';\nimport Category from '../Views/Category/Category';\nimport Menu from '../Views/Menu/Menu';\nimport ReportInvoices from '../Views/Report/ReportInvoices';\nimport StoreUser from '../Views/StoreUser/StoreUser';\nimport Table from '../Views/Table/Table';\n\nconst routes = [\n  {\n    url: '/',\n    name: 'Home',\n    component: Home,\n    exact: true,\n    showOnHeader: false,\n    showOnHome: false,\n    level: 2\n  },\n  {\n    url: '/order',\n    name: 'Order',\n    component: Order,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'yellow'\n    },\n    level: 2\n  },\n  {\n    url: '/order/invoiceId=:invoiceId?',\n    name: 'Order',\n    component: Order,\n    exact: true,\n    showOnHeader: false,\n    showOnHome: false,\n    allowEmployee: false,\n    level: 1\n  },\n  {\n    url: '/menu',\n    name: 'Menu',\n    component: Menu,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'green'\n    },\n    level: 0\n  },\n  {\n    url: '/category',\n    name: 'Category',\n    component: Category,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'blue'\n    },\n    level: 0\n  },\n  {\n    url: '/cashier',\n    name: 'Cashier',\n    component: Cashier,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'red'\n    },\n    level: 1\n  },\n  {\n    url: '/report',\n    name: 'Report',\n    component: ReportInvoices,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'purple'\n    },\n    level: 0\n  },\n  {\n    url: '/table',\n    name: 'Table',\n    component: Table,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'turquoise'\n    },\n    level: 0\n  },\n  {\n    url: '/user',\n    name: 'Store Users',\n    component: StoreUser,\n    exact: true,\n    showOnHeader: true,\n    showOnHome: true,\n    homeCardProperty: {\n      cardColor: 'orange'\n    },\n    level: 0\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\n\nimport graphQLClient from '../../config';\nimport * as Regex from '../../Components/Common/Regex';\nimport { ValidationError, HandlerError } from '../../Components/Common/Error';\n\nimport { ShowMessage } from '../../Components/Message/Message';\nimport TableTable from '../../Components/Table/TableTable';\nimport TableForm from '../../Components/Table/TableForm';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Base\n      isLoading: false,\n      pagingIndex: 0,\n      pagingCount: 5,\n      totalCount: 0,\n      // =========================\n      tableId: 0,\n      tableName: '',\n      ListTable: []\n    };\n\n    this.bindTable = this.bindTable.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handlePaging = this.handlePaging.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      await this.bindMasterTable();\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async bindMasterTable() {\n    const { pagingIndex, pagingCount } = this.state;\n    this.setState({ ListTable: [] });\n\n    const query = `\n    query ($first: Int!, $offset: Int!){\n      tablesConnection(first: $first, offset: $offset, isActive: true) {\n        totalCount,\n        ListTable: tables{\n          id,\n          name\n        }\n      }\n    }`;\n\n    const {\n      tablesConnection: { totalCount, ListTable }\n    } = await graphQLClient.request(query, {\n      first: pagingCount,\n      offset: pagingCount * pagingIndex\n    });\n\n    this.setState({ totalCount, ListTable });\n  }\n\n  bindTable(table) {\n    this.setState({ tableId: table.id, tableName: table.name });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async handleSubmit() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { tableId, tableName } = this.state;\n\n      const query =\n        tableId > 0\n          ? `\n            mutation UpdateTable($tableId: ID!, $tableName: String!) {\n              updateTable(id: $tableId, name: $tableName) {id}\n            }\n          `\n          : `\n            mutation CreateTable($tableName: String!){\n              createTable(name: $tableName) {id}\n            }\n          `;\n\n      const errorList = [];\n      if (Regex.CheckString(tableName))\n        errorList.push('Nama menu tidak boleh kosong');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        tableId: parseInt(tableId, 10),\n        tableName\n      });\n\n      await this.bindMasterTable();\n\n      ShowMessage('is-success', [\n        `Table berhasil ${tableId > 0 ? 'diupdate' : 'ditambah'}`\n      ]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  async handleDelete() {\n    this.setState({ isLoading: true });\n\n    try {\n      const { tableId } = this.state;\n\n      const query = `\n        mutation DeleteTable($tableId: ID!) {\n          deleteTable(id: $tableId) {id}\n        }\n      `;\n\n      const errorList = [];\n      if (Regex.CheckNumber(tableId)) errorList.push('Error Table Id');\n\n      if (errorList.length > 0) throw new ValidationError(errorList);\n\n      await graphQLClient.request(query, {\n        tableId: parseInt(tableId, 10)\n      });\n\n      await this.bindMasterTable();\n      this.handleClear();\n\n      ShowMessage('is-warning', [`Table berhasil dihapus`]);\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  handleClear() {\n    this.setState({ tableId: 0, tableName: '' });\n  }\n\n  handlePaging(args) {\n    const { pagingCount, totalCount } = this.state;\n    let { pagingIndex } = this.state;\n\n    if (args === 'next' && (pagingIndex + 1) * pagingCount < totalCount) {\n      pagingIndex += 1;\n    } else if (args === 'prev' && pagingIndex !== 0) {\n      pagingIndex -= 1;\n    }\n\n    this.setState({ pagingIndex });\n  }\n\n  render() {\n    const {\n      // Base\n      isLoading,\n      pagingIndex,\n      pagingCount,\n      totalCount,\n      // =========================\n      tableId,\n      tableName,\n      ListTable\n    } = this.state;\n\n    return (\n      <div className=\"columns is-mobile\">\n        <div className=\"column\">\n          <TableForm\n            // Base\n            isLoading={isLoading}\n            // =========================\n            tableId={tableId}\n            tableName={tableName}\n            // =========================\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n          />\n        </div>\n\n        <div className=\"column\">\n          <TableTable\n            // Base\n            isLoading={isLoading}\n            pagingIndex={pagingIndex}\n            pagingCount={pagingCount}\n            totalCount={totalCount}\n            // =========================\n            ListTable={ListTable}\n            // =========================\n            bindTable={this.bindTable}\n            handlePaging={this.handlePaging}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import { loginGraphQLClient } from '../config';\n\nimport { LOGIN_POST, LOGOUT_POST } from './types';\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2)\n    return parts\n      .pop()\n      .split(';')\n      .shift();\n  return '';\n}\n\nexport const setLogin = () => async dispatch => {\n  if (getCookie('login_state') !== '0') {\n    dispatch({\n      type: LOGIN_POST,\n      payload: parseInt(getCookie('login_state'), 10)\n    });\n  }\n};\n\nexport const fetchLogin = loginData => async dispatch => {\n  const { username, password } = loginData;\n\n  const query = `\n    mutation SignIn($username: String!, $password: String!){\n      signIn(username: $username, password: $password) {\n        token,\n        user {\n          id,\n          level\n        }\n      }\n    }\n  `;\n\n  const {\n    signIn: {\n      token,\n      user: { id, level }\n    }\n  } = await loginGraphQLClient.request(query, {\n    username,\n    password\n  });\n\n  // Cookie age (7 days * 24 hours * 60 min * 60 secs)\n  const cookieAge = 7 * 24 * 60 * 60;\n\n  document.cookie = `login_state=${level}; max-age=${cookieAge};samesite`;\n  document.cookie = `user_id=${id}; max-age=${cookieAge};samesite`;\n  document.cookie = `jwtToken=${token}; max-age=${cookieAge};samesite`;\n\n  dispatch({\n    type: LOGIN_POST,\n    payload: {\n      id,\n      level\n    }\n  });\n\n  window.location.reload();\n\n  return true;\n};\n\nexport const fetchLogout = () => dispatch => {\n  document.cookie =\n    'login_state=; expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/';\n\n  document.cookie = 'user_id=; expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/';\n  document.cookie = 'jwtToken=; expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/';\n\n  dispatch({\n    type: LOGOUT_POST,\n    payload: -1\n  });\n  // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  //   .then(res => res.json())\n  //   .then(posts =>\n  //     dispatch({\n  //       type: FETCH_POSTS,\n  //       payload: posts\n  //     })\n  //   );\n};\n\n// export const fetchPost = postData => dispatch => {\n//   fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n//     method: \"POST\",\n//     headers: {\n//       \"content-type\": \"application/json\"\n//     },\n//     body: JSON.stringify(postData)\n//   })\n//     .then(res => res.json())\n//     .then(post =>\n//       dispatch({\n//         type: NEW_POST,\n//         payload: post\n//       })\n//     );\n// };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport routes from '../../routes';\nimport { fetchLogout } from '../../actions/loginActions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    const navbarBurgers = Array.prototype.slice.call(\n      document.querySelectorAll('.navbar-burger'),\n      0\n    );\n\n    // Check if there are any navbar burgers\n    if (navbarBurgers.length > 0) {\n      // Add a click event on each of them\n      navbarBurgers.forEach(el => {\n        el.addEventListener('click', () => {\n          // Get the target from the \"data-target\" attribute\n          const { target } = el.dataset;\n          const $target = document.getElementById(target);\n\n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n          el.classList.toggle('is-active');\n          $target.classList.toggle('is-active');\n        });\n      });\n    }\n\n    const navbarItem = document.querySelectorAll('.navbar-menu .navbar-item');\n    if (navbarItem.length > 0) {\n      const navbar = document.getElementById('navbar');\n\n      navbarItem.forEach(item => {\n        item.addEventListener('click', () => {\n          navbar.classList.toggle('is-active');\n\n          navbarBurgers.forEach(el => {\n            // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n            el.classList.toggle('is-active');\n          });\n        });\n      });\n    }\n  }\n\n  handleLogout = () => {\n    const { fetchLogout } = this.props;\n\n    fetchLogout();\n  };\n\n  render() {\n    const { login } = this.props;\n\n    return (\n      <nav\n        className=\"navbar is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <span className=\"navbar-item\" href=\"https://bulma.io\">\n            <Link to=\"/\">\n              <img\n                src=\"https://bulma.io/images/bulma-logo-white.png\"\n                alt=\"bulma logo\"\n                width=\"112\"\n                height=\"28\"\n              />\n            </Link>\n          </span>\n\n          <span\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbar\"\n          >\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </span>\n        </div>\n\n        <div id=\"navbar\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            {routes\n              .filter(item => item.showOnHeader && item.level >= login)\n              .map(item => (\n                <Link key={item.url} className=\"navbar-item\" to={item.url}>\n                  {item.name}\n                </Link>\n              ))}\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"button is-danger\"\n                  onClick={this.handleLogout}\n                >\n                  Log out\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.item.login\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchLogout\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Message, { ShowMessage } from '../Components/Message/Message';\n\nimport { fetchLogin, setLogin } from '../actions/loginActions';\nimport { HandlerError } from '../Components/Common/Error';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      username: '',\n      password: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const { setLogin } = this.props;\n    setLogin();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async handleSubmit(e) {\n    try {\n      e.preventDefault();\n      const { username, password } = this.state;\n\n      const { fetchLogin } = this.props;\n\n      this.setState({ isLoading: true });\n\n      const loginIsValid = await fetchLogin({\n        username,\n        password\n      });\n\n      if (this.mounted) {\n        if (loginIsValid) {\n          ShowMessage('is-success', ['Success']);\n        } else {\n          ShowMessage('is-danger', ['Wrong Password']);\n        }\n        this.setState({ isLoading: false });\n      }\n    } catch (ex) {\n      ShowMessage('is-danger', HandlerError(ex));\n      if (this.mounted) this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const { isLoading, username, password } = this.state;\n\n    return (\n      <div className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <div className=\"column is-4 is-offset-4\">\n              <Message />\n              <h2 className=\"title\">Login</h2>\n              <form>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      name=\"username\"\n                      type=\"username\"\n                      placeholder=\"Username...\"\n                      onChange={this.handleChange}\n                      value={username}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Password...\"\n                      onChange={this.handleChange}\n                      value={password}\n                    />\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className={\n                    isLoading\n                      ? 'button is-info is-block is-fullwidth is-loading'\n                      : 'button is-info is-block is-fullwidth'\n                  }\n                  disabled={isLoading}\n                  onClick={this.handleSubmit}\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchLogin,\n  setLogin\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Login);\n","import React from 'react';\n\nconst NotFound404 = props => {\n  return (\n    <div className=\"flex flex-dir-column flex-align-center\">\n      <h1 className=\"title is-2\">404</h1>\n      <h2 className=\"title is-3\">Sorry Page Not Found</h2>\n    </div>\n  );\n};\n\nexport default NotFound404;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport './assets/css/bulma-modifier.css';\nimport './assets/css/base-margin.css';\nimport './assets/css/base-grid.css';\nimport './assets/css/base-flex.css';\n\nimport Header from './Components/Header/Header';\nimport Message from './Components/Message/Message';\n\nimport Login from './Views/Login';\n\nimport routes from './routes';\nimport NotFound404 from './Views/ErrorPage/NotFound404';\n\nconst App = props => {\n  const { login } = props;\n\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        {login >= 0 ? (\n          <React.Fragment>\n            <Header />\n            <Message />\n            <div className=\"container is-fluid\">\n              <Switch>\n                {routes\n                  .filter(x => x.level >= login)\n                  .map(item => (\n                    <Route\n                      key={item.url}\n                      path={item.url}\n                      exact={item.exact}\n                      component={item.component}\n                    />\n                  ))}\n                <Route path=\"*\" component={NotFound404} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        ) : (\n          <Login />\n        )}\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.item.login\n  };\n};\n\nconnect(mapStateToProps)(Header);\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './assets/scss/modified-bulma.scss';\n\nimport './index.css';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}